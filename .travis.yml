language: cpp
os: linux
dist: xenial
sudo: false

matrix:
  include:
    - env: CXX_COMPILER=clang++-6.0 CXX=g++-8
      addons: { apt: { packages: ["clang-6.0", "g++-8"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-xenial-6.0"] } }

    - env: CXX_COMPILER=clang++-7 CXX=g++-8
      addons: { apt: { packages: ["clang-7", "g++-8"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-xenial-7"] } }

    - env: CXX_COMPILER=clang++-8 CXX=g++-8
      addons: { apt: { packages: ["clang-8", "g++-8"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-xenial-8"] } }

    - env: CXX_COMPILER=clang++-9 CXX=g++-8
      addons:
        apt:
          packages:
            - clang-9
            - g++-8
          sources:
            - ubuntu-toolchain-r-test
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: CXX_COMPILER=g++-8 CODE_COVERAGE=true
      addons: { apt: { packages: ["g++-8"], sources: ["ubuntu-toolchain-r-test"] } }
   
install:

################################################################################
# Third party dependencies are installed in ${TRAVIS_BUILD_DIR}/../third_party
################################################################################
- |
  THIRD_PARTY_DIR="${TRAVIS_BUILD_DIR}/../third_party"
  mkdir -p ${THIRD_PARTY_DIR}
  
################################################################################
# Install the latest Boost and build Boost.Test (compiled with gcc)
################################################################################
- |
  BOOST_VERSION=1.69.0
  BOOST_DIR=${THIRD_PARTY_DIR}/boost-${BOOST_VERSION}
  BOOST_URL="https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION//\./_}.tar.bz2"
  mkdir -p ${BOOST_DIR} && travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xj -C ${BOOST_DIR}
  cd ${BOOST_DIR} && ./bootstrap.sh --with-libraries=test && ./b2 -d0 link=static runtime-link=static threading=multi variant=release

################################################################################
# Install the latest CMake
################################################################################
- |
  CMAKE_VERSION=3.13.3
  CMAKE_DIR=${THIRD_PARTY_DIR}/cmake-${CMAKE_VERSION}
  CMAKE_URL="http://www.cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
  mkdir -p ${CMAKE_DIR} && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${CMAKE_DIR}
  export PATH=${CMAKE_DIR}/bin:${PATH}

before_script:
- |
  cd ${TRAVIS_BUILD_DIR}
  mkdir build && cd build
  if [[ "${CODE_COVERAGE}" == "true" ]]; then
    cmake .. -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DBOOST_ROOT="${BOOST_DIR}" -DBOOST_LIBRARYDIR="${BOOST_DIR}/stage/lib" -DCMAKE_CXX_FLAGS="--coverage" -DCMAKE_EXE_LINKER_FLAGS="--coverage"
  else
    cmake .. -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DBOOST_ROOT="${BOOST_DIR}" -DBOOST_LIBRARYDIR="${BOOST_DIR}/stage/lib"
  fi

script:
- |
  cmake --build .
  ctest

after_success:
- |
  if [[ "${CODE_COVERAGE}" == "true" ]]; then
    sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 10
    bash <(curl -s https://codecov.io/bash)
  fi

notifications:
  email: false
